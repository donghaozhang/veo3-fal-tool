name: "tts_basic_test"
description: "Basic text-to-speech generation test"
prompt: "Welcome to our AI-powered text-to-speech system. This demonstration showcases natural voice synthesis with customizable parameters for professional audio content creation."

# Configuration for TTS testing
tts_settings:
  primary_voice: "rachel"
  backup_voice: "drew"
  output_format: "mp3"
  quality: "high"
  
# Test scenarios
test_cases:
  - name: "basic_generation"
    text: "Welcome to our AI-powered text-to-speech system. This demonstration showcases natural voice synthesis with customizable parameters for professional audio content creation."
    voice: "rachel"
    settings:
      speed: 1.0
      stability: 0.5
      similarity_boost: 0.8
      style: 0.2
    expected_output: "tts_basic.mp3"
    
  - name: "professional_male"
    text: "This is a professional male voice demonstration with optimized settings for business presentations and corporate communications."
    voice: "drew"
    settings:
      speed: 1.0
      stability: 0.7
      similarity_boost: 0.9
      style: 0.1
    expected_output: "tts_professional.mp3"
    
  - name: "creative_female"
    text: "This creative voice sample demonstrates expressive speech with dynamic intonation perfect for storytelling and engaging content."
    voice: "bella"
    settings:
      speed: 1.1
      stability: 0.3
      similarity_boost: 0.6
      style: 0.8
    expected_output: "tts_creative.mp3"

# CLI commands to execute
commands:
  list_voices:
    cmd: "python examples/basic_usage.py --list-voices"
    description: "List all available voices"
    
  generate_basic:
    cmd: "python examples/basic_usage.py --text 'Welcome to our AI-powered text-to-speech system. This demonstration showcases natural voice synthesis with customizable parameters for professional audio content creation.' --voice rachel --output tts_basic.mp3 --quiet"
    description: "Generate basic TTS sample"
    
  generate_professional:
    cmd: "python examples/tts_cli_wrapper.py 'This is a professional male voice demonstration with optimized settings for business presentations and corporate communications.' drew tts_professional.mp3 --stability 0.7 --similarity-boost 0.9 --style 0.1 --json"
    description: "Generate professional male voice sample"
    
  generate_creative:
    cmd: "python examples/basic_usage.py --text 'This creative voice sample demonstrates expressive speech with dynamic intonation perfect for storytelling and engaging content.' --voice bella --speed 1.1 --stability 0.3 --style 0.8 --output tts_creative.mp3 --quiet"
    description: "Generate creative female voice sample"
    
  validate_voice:
    cmd: "python examples/tts_cli_wrapper.py --validate-voice rachel --json"
    description: "Validate voice availability"

# Expected outputs
outputs:
  files:
    - "output/tts_basic.mp3"
    - "output/tts_professional.mp3" 
    - "output/tts_creative.mp3"
  
  metadata:
    total_files: 3
    voices_tested: 3
    duration_estimate: "30-45 seconds per file"
    format: "MP3"

# Test execution instructions
execution:
  working_directory: "/home/zdhpe/veo3-video-generation/text_to_speech"
  prerequisites:
    - "ELEVENLABS_API_KEY environment variable set"
    - "Python dependencies installed"
    - "Virtual environment activated"
  
  steps:
    1: "Change to text_to_speech directory"
    2: "Run voice listing command"
    3: "Generate basic TTS sample"
    4: "Generate professional voice sample"
    5: "Generate creative voice sample"
    6: "Validate outputs in output/ directory"

# Success criteria
success_criteria:
  - "All 3 audio files generated successfully"
  - "Files placed in output/ directory"
  - "Voice validation returns true for valid voices"
  - "JSON output format works correctly"
  - "No critical errors in generation process"

# Cost and performance
estimates:
  cost_per_generation: "$0.05"
  total_estimated_cost: "$0.15"
  processing_time: "10-15 seconds per file"
  api_calls_required: 3